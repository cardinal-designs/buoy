
{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign current_selling_plan_allocation = current_variant.selected_selling_plan_allocation
  if current_selling_plan_allocation == nil and current_variant.requires_selling_plan
    assign current_selling_plan_allocation = current_variant.selling_plan_allocations | first
  endif
  assign offer = current_selling_plan_allocation | default: current_variant
  assign filtered_selling_plan_groups = product.selling_plan_groups | where: "app_id", "4836205"
  assign hiddenGroups = filtered_selling_plan_groups | map: "name" | where: "[hidden]"
  assign visibleGroupsSize = filtered_selling_plan_groups.size | minus: hiddenGroups.size
  assign smartrr_unique_id = product.id
-%}

{% comment %}
  <!-- Add 'data-smartrr-form-id: product.id' to your '{ % form 'product' ... % } code so Smartrr can find your form. -->
  <!-- data-smartrr-form-id should have the same value as smartrr_unique_id, product.id in this case -->
  <!-- Add a { % render 'smartrr-product' % } in the product form for this code to be displayed. -->
  <!-- Use uiImplementDetectChange below to inform Smartrr when Variant/Quantity are changed. -->
  <!-- Set smartrr_collection for collection pages to avoid duplicate <style> and <script> for each product on the page. -->
  <!-- Add the style and script render code separately to the top of the collection page. -->
{% endcomment %}

{% unless smartrr_collection %}
  {% render 'smartrr-product-styles' %}
{% endunless %}

{% comment %}
  <!-- use this code to create a pricing display element anywhere on the page -->
  <!-- Available Styles: original(variant-price), strike(discounted price struck through), overwrite -->
  <!-- Adding '-compare' at the end of the style will show the Compare At price when One time purchase is selected -->
  <!-- Remove the 'data-use-quantity="true"' if you do not want the quantity to affect the pricing display -->
  <div data-smartrr-product-id="{{ smartrr_unique_id }}" data-smartrr-price-style="overwrite-compare" data-use-quantity="true">
    <span data-smartrr-compare-price></span>
    <span data-smartrr-regular-price></span>
    <span data-smartrr-subscribe-price></span>
  </div>
{% endcomment %}
{% comment %}
  <!-- Make sure your cart/add.js AJAX call gets this value. Older/Custom carts may not extract this input from the form. -->
{% endcomment %}
<input type="hidden" name="selling_plan" data-smartrr-selling-plan-input value="{{ current_selling_plan_allocation.selling_plan.id | default: '' }}">

<div class="hide" data-smartrr-page-load-variant="{{ current_variant.id }}"></div>
{% if visibleGroupsSize > 0 %}
<p class="pick-plan">PICK YOUR PLAN</p>
<fieldset class="smartrr-purchase-options" data-smartrr-purchase-options="{{ smartrr_unique_id }}">
  <div class="smartrr-no-plans-available hide" data-smartrr-no-plans>
    No available purchase options for this selection.
  </div>
  <div data-smartrr-selling-plan-groups>
    {% unless product.requires_selling_plan %}
    <div data-smartrr-selling-plan-group-id class="smartrr-otp">
      <div class="smartrr-selling-plan-group-header">
        <label class="smartrr-selling-plan-group-label">
          <input type="radio" data-smartrr-selling-plan-group-input name="purchase_option" value="">
          <div class="smartrr-selling-plan-group-input-display"></div>
          <div class="smartrr-selling-plan-group-name">
            <div>One-Time</div>
            <p class="sh4 light">{{section.settings.one_time_subtext}}</p>
            <div class="hide-desktop hide-mobile">{{ product.price | money_without_trailing_zeros }}</div>
          </div>
        </label>
      </div>
      <div data-smartrr-selling-plan-group-contents class="hide"></div>
    </div>
    {% endunless %}

    {% for group in filtered_selling_plan_groups %}
    {% unless group.name contains "[hidden]" %}
    <div data-smartrr-selling-plan-group-id="{{ group.id }}">
      <div class="smartrr-selling-plan-group-header">
        <label class="smartrr-selling-plan-group-label">
          <input type="radio" data-smartrr-selling-plan-group-input="{{ group.id }}"
                 name="purchase_option" value="{{ group.id }}">
          <div class="smartrr-selling-plan-group-input-display"></div>
          <div class="smartrr-selling-plan-group-name">
            <div class="subscribe-tooltip__flex">
              Subscribe
           <div class="product__subscription-tooltip">
            <button class="product__subscription-tooltip-text">
              <p class="body-small light">Clear Pee Club <span>Save 24%</span></p>
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M8.10634 3.16406C6.33359 3.16406 4.87747 4.56156 4.87747 6.29014C4.87634 6.38125 4.91177 6.46898 4.97574 6.53393C5.03985 6.59874 5.12716 6.6353 5.21827 6.6353C5.30952 6.6353 5.39682 6.59874 5.46079 6.53393C5.5249 6.46897 5.56033 6.38125 5.55921 6.29014C5.55921 4.94383 6.68903 3.84579 8.10636 3.84579C8.81353 3.84579 9.52466 4.13386 10.0124 4.58009C10.5001 5.02632 10.7619 5.6018 10.6565 6.23403V6.23445C10.4288 7.60974 9.81022 7.83933 9.10107 8.27476C8.74649 8.4924 8.36266 8.75533 8.10171 9.21099C7.84077 9.66664 7.72042 10.2833 7.78861 11.1658V11.1656C7.79452 11.2566 7.83656 11.3414 7.90545 11.4011C7.9742 11.4609 8.06418 11.4906 8.155 11.4835C8.24596 11.4765 8.33018 11.4335 8.38909 11.3637C8.448 11.2941 8.47654 11.2039 8.46838 11.1131C8.4068 10.3149 8.51829 9.85532 8.69333 9.54954C8.86837 9.24374 9.12509 9.05987 9.45773 8.85558C10.1229 8.44728 11.0662 7.93285 11.329 6.34597V6.34568C11.4764 5.46107 11.0924 4.64409 10.4727 4.07708C9.85278 3.50992 8.99433 3.16407 8.10648 3.16407L8.10634 3.16406Z" fill="currentColor"/>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M8.12012 12.0918C7.74868 12.0918 7.43994 12.4031 7.43994 12.7735C7.43994 13.144 7.74672 13.4552 8.12012 13.4552C8.49352 13.4552 8.80044 13.1461 8.80044 12.7735C8.80044 12.401 8.49155 12.0918 8.12012 12.0918Z" fill="currentColor"/>
                <path fill-rule="evenodd" clip-rule="evenodd" d="M8.12012 0.75C3.9814 0.75 0.620117 4.12734 0.620117 8.28203C0.620117 12.4369 3.98144 15.8126 8.12012 15.8126C12.2588 15.8126 15.6201 12.4371 15.6201 8.28203C15.6201 4.12712 12.2589 0.75 8.12012 0.75V0.75ZM8.12012 1.43172C11.8888 1.43172 14.9381 4.49413 14.9381 8.28207C14.9381 12.0702 11.8886 15.131 8.12012 15.131C4.35165 15.131 1.30216 12.0704 1.30216 8.28207C1.30216 4.49392 4.35176 1.43172 8.12012 1.43172V1.43172Z" fill="currentColor"/>
              </svg>
            </button>
            <div class="product__subscription-tooltip-popover">
            <p class="body">You’re the boss.</p><br>
            <p class="body-small light"><div class="check-item body light">✓ Save 24%<br>✓ Free Shipping<br>✓ 30 Day Guarantee<br>✓ Cancel after your first order or make it a habit</div></p>
            </div>
          </div>
              </div>
            <div class="subscribe-item_container">
              {% for block in section.blocks %}
              <div class="subscribe-item_info">
                <img src="{{ block.settings.purchase_type_img | img_url: 'master' }}"/>
                <div>
                  <p>{{block.settings.purchase_type_text }}</p>
                  <p>{{block.settings.purchase_type_subtext }}</p>
                </div>
              </div>
              {% endfor %}
            </div>
            <div class="hide-desktop hide-mobile" data-smartrr-product-id="{{ smartrr_unique_id }}" data-smartrr-price-style="strike-compare" data-smartrr-constant={{ group.id }}>
              <span data-smartrr-compare-price></span>
              <span data-smartrr-subscribe-price></span>
              <span data-smartrr-regular-price></span>
            </div>
          </div>
        </label>
      </div>
      <div data-smartrr-selling-plan-group-contents="{{ group.id }}" class="hide">
        <div data-smartrr-selling-plan-group-plans class="hide">
          <div class="smartrr-deliver-frequency">Deliver Every</div>
          {% if smartrr_nice_select %}
          <div data-smartrr-nice-select="{{ group.id }}">
            <div data-smartrr-ns-display></div>
            <div data-smartrr-ns-list="{{ group.id }}">
              <ul>
                {% for plan in group.selling_plans %}
                <li data-smartrr-ns-plan="{{ group.id }}" data-smartrr-ns-planid="{{ plan.id }}"><span>{{ plan.options[0].value }}</span></li>
                  {% endfor %}
                </ul>
            </div>
          </div>
          {% else %}
          <select data-smartrr-selling-plans-select="{{ group.id }}">
            {% for plan in group.selling_plans %}
            <option data-smartrr-selling-plan-select-label-input="{{ group.id }}" value="{{ plan.id }}">{{ plan.options[0].value }}</option>
            {% endfor %}
          </select>
          {% endif %}
        </div>
      </div>
    </div>
    {%endunless %}
    {%endfor %}
  </div>

</fieldset>
{% endif %}

{% unless smartrr_collection %}
  <script type="text/javascript" src="{{ 'smartrr-product-script.js' | asset_url }}"></script>
{% endunless %}

{% if product.id %}
<script>
  if (typeof window.smartrrProductList === 'undefined') {
    window.smartrrProductList = {};
  }

  window.smartrrProductList["{{ smartrr_unique_id }}"] = {
    uniqueId: "{{ smartrr_unique_id }}",
    ui: undefined,
    logic: undefined,
    appId: "4836205",
    hiddenGroup: "[hidden]",
    formTag: "data-smartrr-form-id",

    {% if smartrr_nice_select %}
    niceSelect: true,
    selectedMenu: undefined,
    {% else %}
    niceSelect: false,
    {% endif %}

    product: {{ product|json }},
    /* Called at DOMContentLoaded when initSmartrr creates the UI and Logic Modules */
    /* Used to inform the Modules of changes in Variants and Plans */
    uiImplementDetectChange: function (ui) {

      {% if smartrr_nice_select %}
      var niceSelects = ui.apiQuerySelectorAllDataTag('data-smartrr-nice-select', ui.$form);
      niceSelects.forEach(function (nice) {
        ui.apiSetupNiceSelect(nice, function(li) {
          ui.logic.apiChangePlan(ui.apiGetAttribute(li, 'data-smartrr-ns-planid'));
        });
      })
      {% endif %}

      var groupList = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plan-group-input', ui.$form);
      var selectedGroup = "";
      groupList && groupList.forEach(function (group) {
        if (group.checked) {
          selectedGroup = ui.apiGetAttribute(group, 'data-smartrr-selling-plan-group-input');
        }
      });

      /* Inform the Logic handler about the variant selected when the page loads. */
      var variantId = ui.apiGetAttribute(ui.apiQuerySelectorDataTag('data-smartrr-page-load-variant', ui.$form), 'data-smartrr-page-load-variant');

      ui.logic.apiSetupVariantAndGroup(variantId, selectedGroup);

      /* Handle the variant selector on the page here. */
      /* Get the variant selector/buttons. On change/click, get the variant id and call ui.logic.apiChangeVariant(variantId); */
      /* Example code shows how to handle a swatch */
      /*
      var variantButtons = ui.$form.querySelectorAll('.swatch.clearfix input');
      variantButtons.forEach(function(variantInput) {
        variantInput.addEventListener('click', function() {
          var variantName = ui.apiGetValue(variantInput);
          var variant = ui.logic.apiGetVariantByName(variantName);
          ui.logic.apiChangeVariant(variant.id);
        });
      });
      */

      /* Handle the plan selectors for each group. In this case, it is a <select> */
      {% unless smartrr_nice_select %}
      var planSelectors = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plans-select', ui.$form);
      planSelectors.forEach(function(planSelector) {
        planSelector.addEventListener("change", function () {
          ui.logic.apiChangePlan(ui.apiGetValue(planSelector));
        });
      });
      {% endunless %}

      /* Signal possible change in pricing displays when quantity is changed */
      /*
      var qty = ui.$form.querySelector('input[name="quantity"]');
      qty.addEventListener("change", function() {
        ui.logic.apiChangePlan(ui.logic.getCurrentCopy().planId);
      });
      */
    },

    /* Called when Plan (the subscription frequency) is changed. */
    /* Called when One time purchase is selected. */
    uiOnPlanChange: function (ui, currentInfo) {
      {% unless smartrr_nice_select %}
      if (currentInfo.groupId && currentInfo.planId) {
          /* Ensures the <select> option reflects the change in planId. */
          ui.apiSetValue(ui.apiQuerySelectorDataTag('data-smartrr-selling-plans-select', ui.$form, currentInfo.groupId), currentInfo.planId);
      }
      {% endunless %}
    },
    /* Called when the group (One time purchase / Subscribe & Save) is changed. */
    uiOnGroupChange: function (ui, currentInfo) {
      /* Use this to implement active class on Groups */
      /*
      var groupDivs = ui.apiQuerySelectorAllDataTag('data-smartrr-selling-plan-group-id', ui.$form);
      groupDivs.forEach(function(group) {
        if (currentInfo.groupId === ui.apiGetAttribute(group, 'data-smartrr-selling-plan-group-id')) {
          group.classList.add('smartrr-group-active');
        } else {
          group.classList.remove('smartrr-group-active');
        }
      });
      */
     {% if smartrr_nice_select %}
     if (currentInfo.groupId !== "") {
      var nice = ui.apiQuerySelectorDataTag('data-smartrr-nice-select', ui.$form, currentInfo.groupId);
      if (nice) {
        var li = nice.querySelector('[data-smartrr-ns-display] li');
        if (li) {
          ui.logic.apiChangePlan(ui.apiGetAttribute(li, 'data-smartrr-ns-planid'));
        }
      }
     }
     {% endif %}
    },

    /* Called when the variant is changed */
    uiOnVariantChange: function (ui, currentInfo) { },

    /* Called when the quantity is retrieved for used in pricing display calculation. */
    uiGetQuantity: function (ui) {
      /* Handle the quantity input on the page here. */
      /* return 1 if you don't want quantity to be considered in pricing display elements */
      /* return ui.apiGetValue(ui.$form.querySelector('input[name="quantity"]')); */
      return 1;
    },

    uiModifyPrice: function (ui, $div, money) {
      /*
      Change price here based on requirements. For example, setting up per case/pound/bag price.
      money.regular: amount that shows up when strike display is chosen. This is the original un-discounted price.
      money.subscribe: the final discounted price or one-time price that shows up in the checkout.
      */
      return money;
    }
  };

  window.initSmartrr && window.initSmartrr("{{ smartrr_unique_id }}");
</script>

{% endif %}
